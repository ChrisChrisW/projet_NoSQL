name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      MONGO_PORT: ${{ secrets.MONGO_PORT }}
      MONGO_DB_URI: ${{ secrets.MONGO_DB_URI }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      COLLECTION_NAME: ${{ secrets.COLLECTION_NAME }}
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      REDIS_PORT: ${{ secrets.REDIS_PORT }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      POSTGRES_DB_URI: ${{ secrets.POSTGRES_DB_URI }}
      NEO4J_PORT: ${{ secrets.NEO4J_PORT }}
      NEO4J_URI: ${{ secrets.NEO4J_URI }}
      NEO4J_USER: ${{ secrets.NEO4J_USER }}
      NEO4J_PASSWORD: ${{ secrets.NEO4J_PASSWORD }}
      ELASTICSEARCH_PORT: ${{ secrets.ELASTICSEARCH_PORT }}
      ELASTICSEARCH_HOST: ${{ secrets.ELASTICSEARCH_HOST }}
      ELASTICSEARCH_INDEX: ${{ secrets.ELASTICSEARCH_INDEX }}
      WEB_PORT: ${{ secrets.WEB_PORT }}
      SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
      SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Generate .env file
        run: |
          echo "MONGO_PORT=${MONGO_PORT}" > .env
          echo "MONGO_DB_URI=${MONGO_DB_URI}" >> .env
          echo "DATABASE_NAME=${DATABASE_NAME}" >> .env
          echo "COLLECTION_NAME=${COLLECTION_NAME}" >> .env
          echo "REDIS_HOST=${REDIS_HOST}" >> .env
          echo "REDIS_PORT=${REDIS_PORT}" >> .env
          echo "POSTGRES_DB=${POSTGRES_DB}" >> .env
          echo "POSTGRES_USER=${POSTGRES_USER}" >> .env
          echo "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}" >> .env
          echo "POSTGRES_PORT=${POSTGRES_PORT}" >> .env
          echo "POSTGRES_DB_URI=${POSTGRES_DB_URI}" >> .env
          echo "NEO4J_PORT=${NEO4J_PORT}" >> .env
          echo "NEO4J_URI=${NEO4J_URI}" >> .env
          echo "NEO4J_USER=${NEO4J_USER}" >> .env
          echo "NEO4J_PASSWORD=${NEO4J_PASSWORD}" >> .env
          echo "ELASTICSEARCH_PORT=${ELASTICSEARCH_PORT}" >> .env
          echo "ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST}" >> .env
          echo "ELASTICSEARCH_INDEX=${ELASTICSEARCH_INDEX}" >> .env
          echo "WEB_PORT=${WEB_PORT}" >> .env
          echo "SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID}" >> .env
          echo "SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}" >> .env

      - name: Set up Docker Compose
        run: |
          sudo rm /usr/local/bin/docker-compose
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Build and Push Docker Images
        run: docker-compose build && docker-compose push

      - name: Deploy with Docker Compose
        run: docker-compose up -d
